---
- name: Install simple PostgeSQL instance
  hosts: psql_cluster
  vars:
    allow_world_readable_tmpfiles: true

  tasks:
    - name: Install postgresql-common
      ansible.builtin.apt:
        name: "{{ packages.postgresql_preinstall }}"
        state: present 
        update_cache: true
      environment:
        DEBIAN_FRONTEND: noninteractive
      tags: 
      - preinstall

    - name: Update 'createcluster' data_directory
      ansible.builtin.lineinfile:
        path: /etc/postgresql-common/createcluster.conf
        regexp: '^(#d|d)ata_directory'
        line: data_directory='{{pg.data_dir}}/{{pg.cluster_name}}'
      tags:
      - preinstall
      

    - name: Update 'createcluster' wal_directory
      ansible.builtin.lineinfile:
        path: /etc/postgresql-common/createcluster.conf
        regexp: '^(#w|w)aldir'
        line: waldir='{{pg.wal_dir}}/{{pg.cluster_name}}'
      tags:
      - preinstall
      

    - name: Install core postgres packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop: "{{ packages.postgresql_server }}"
      tags:
      - preinstall
      

    - name: Find initdb
      shell: "find / -iname initdb -type f 2>/dev/null"
      register: initdb
      ignore_errors: yes
      tags:
      - initialization 
      

    - name: Show result of initdb
      debug:
        var: initdb.stdout_lines[0]
      tags: 
      - initialization
      

    - name: Create a symbolic link to initdb
      ansible.builtin.file:
        src: "{{ initdb.stdout_lines[0] }}"
        dest: /usr/local/bin/initdb
        state: link
      tags:
      - initialization 
      

    - name: Set rights to PG data dir
      ansible.builtin.file:
        dest: "{{pg.data_dir}}"
        owner: postgres
        group: postgres 
        mode: '0755'
        recurse: yes
      tags:
      - initialization 
     
    - name: Set rights to PG wal dir
      ansible.builtin.file:
        dest: "{{pg.wal_dir}}"
        owner: postgres
        group: postgres 
        mode: '0755'
        recurse: yes
      tags:
      - initialization 
      
    - name: Init cluster
      command: "initdb -D {{ pg.data_dir }} -X {{pg.wal_dir}} -E {{pg.encoding}}"  
      become: true      
      become_user: "{{ pg.user }}"
      tags: 
      - initialization

    - name: Find pg_ctl to start cluster
      shell: "find / -iname pg_ctl -type f 2>/dev/null"
      register: pg_ctl
      ignore_errors: yes
      tags:
      - initialization
      - test


    - name: Show result of pg_ctl
      debug:
        var: pg_ctl.stdout_lines[0]
      tags: 
      - initialization
      - test


    - name: Start our pg cluster
      command: "{{pg_ctl.stdout_lines[0]}} start -D {{pg.data_dir}} "  
      become: true      
      become_user: "{{ pg.user }}"
      tags: 
      - initialization


    - name: Create custom systemd service
      ansible.builtin.template:
        src: templates/postgresql.service.j2
        dest: /lib/systemd/system/postgresql.service
        mode: '0644'
      tags: 
      - initialization
      - test

  handlers:
  - name: restart postgres
    ansible.builtin.service:
      name: postgresql
      state: reloaded
    become: yes
